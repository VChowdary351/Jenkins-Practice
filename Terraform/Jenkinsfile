// pipeline{
//     agent any
//     options {
//         ansiColor('xterm')
//         // timeout(time: 1, unit: 'HOURS')
//         // disableConcurrentBuilds()
//     }

//     stages{
//         stage('Init'){
//             steps{
//                  withAWS(credentials: 'aws-creds', region: 'us-east-1') {
//                 sh'''
//                     cd Terraform
//                     ls -ltr
//                     pwd
//                     terraform init
//                 '''
//                  }
//             }
//         }
    
        
//         stage('plan'){
//             steps{
//                 sh'''
//                     cd Terraformd
//                     ls -ltr
//                     pwd
//                     terraform plan
//                 '''
//             }
//         }
//     }
//     post{
//         always{
//             echo 'i will always run whether job is success or not'
//         }
//         success{
//             echo 'i will run only when job is success'
//         }
//         failure{
//             echo 'i will run when is failed '
//         }
//     }

// }


pipeline {
    agent any
    options {
        ansiColor('xterm')
        // timeout(time: 1, unit: 'HOURS')
        // disableConcurrentBuilds()
    }
    parameters {
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    // build
    stages {
        stage('Init') {
            steps {
                sh """
                    cd Terraform
                    terraform init -reconfigure
                """
            }
        }
        stage('Plan') {
            steps {
                sh """
                    cd Terraform
                    terraform plan
                """
            }
        }
        stage('Deploy') {
            when {
                expression { 
                    params.action == 'apply'
                }
            }
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
            steps {
                sh """
                    cd Terraform
                    terraform apply -auto-approve
                """
            }
        }
        stage('Destroy') {
            when {
                expression { 
                    params.action == 'destroy'
                }
            }
            input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                // }
            }
            steps {
                sh """
                    cd Terraform
                    terraform destroy -auto-approve
                """
            }
        }
    }
    // post build
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
        failure { 
            echo 'this runs when pipeline is failed, used generally to send some alerts'
        }
        success{
            echo 'I will say Hello when pipeline is success'
        }
    }
}